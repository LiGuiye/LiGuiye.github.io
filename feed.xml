<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2022-12-15T10:56:22-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">blank</title><entry><title type="html">Diffusion models</title><link href="http://localhost:4000/blog/2022/Diffusion-models/" rel="alternate" type="text/html" title="Diffusion models" /><published>2022-12-14T08:59:00-07:00</published><updated>2022-12-14T08:59:00-07:00</updated><id>http://localhost:4000/blog/2022/Diffusion-models</id><content type="html" xml:base="http://localhost:4000/blog/2022/Diffusion-models/">&lt;p&gt;&lt;em&gt;TOC&lt;/em&gt;&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#markov-chain&quot; id=&quot;markdown-toc-markov-chain&quot;&gt;Markov chain&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#main-idea-of-diffusion-model&quot; id=&quot;markdown-toc-main-idea-of-diffusion-model&quot;&gt;Main idea of Diffusion Model&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#forward-process-or-diffusion-process&quot; id=&quot;markdown-toc-forward-process-or-diffusion-process&quot;&gt;&lt;em&gt;Forward process&lt;/em&gt; (or &lt;em&gt;diffusion process&lt;/em&gt;)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#reverse-process-or-reverse-diffusion-process&quot; id=&quot;markdown-toc-reverse-process-or-reverse-diffusion-process&quot;&gt;&lt;em&gt;Reverse process&lt;/em&gt; (or &lt;em&gt;reverse diffusion process&lt;/em&gt;)&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#benefits-of-diffusion-models&quot; id=&quot;markdown-toc-benefits-of-diffusion-models&quot;&gt;Benefits of Diffusion Models&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#training&quot; id=&quot;markdown-toc-training&quot;&gt;Training&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#summary&quot; id=&quot;markdown-toc-summary&quot;&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Reference:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Official links:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;DDPM (NeurIPS 2020)&lt;/p&gt;

    &lt;p&gt;Paper: &lt;a href=&quot;https://arxiv.org/abs/2006.11239&quot;&gt;Denoising Diffusion Probabilistic Models&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;Github: &lt;a href=&quot;https://github.com/hojonathanho/diffusion&quot;&gt;https://github.com/hojonathanho/diffusion&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;Website: &lt;a href=&quot;https://hojonathanho.github.io/diffusion/&quot;&gt;https://hojonathanho.github.io/diffusion/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Improved DDPM (ICML 2021)&lt;/p&gt;

    &lt;p&gt;Paper: &lt;a href=&quot;https://arxiv.org/abs/2102.09672&quot;&gt;Improved Denoising Diffusion Probabilistic Models&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;Github: &lt;a href=&quot;https://github.com/openai/improved-diffusion&quot;&gt;https://github.com/openai/improved-diffusion&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Guided Diffusion Models (NeurIPS 2021)&lt;/p&gt;

    &lt;p&gt;Paper: &lt;a href=&quot;https://arxiv.org/pdf/2105.05233.pdf&quot;&gt;Diffusion Models Beat GANs on Image Synthesis&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;Github: &lt;a href=&quot;https://github.com/openai/guided-diffusion&quot;&gt;https://github.com/openai/guided-diffusion&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Blog:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.assemblyai.com/blog/diffusion-models-for-machine-learning-introduction/&quot;&gt;Introduction to Diffusion Models for Machine Learning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lilianweng.github.io/posts/2021-07-11-diffusion-models/&quot;&gt;What are Diffusion Models?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;markov-chain&quot;&gt;Markov chain&lt;/h2&gt;

&lt;p&gt;Quote from &lt;a href=&quot;https://en.wikipedia.org/wiki/Markov_chain#:~:text=A%20Markov%20chain%20or%20Markov,the%20state%20of%20affairs%20now.%22&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;Markov chain&lt;/strong&gt; or &lt;strong&gt;Markov process&lt;/strong&gt; is a stochastic model describing a sequence of possible events in which the probability of each event depends only on the state attained in the previous event. Informally, this may be thought of as, “What happens next depends only on the state of affairs now”.&lt;/p&gt;

&lt;h2 id=&quot;main-idea-of-diffusion-model&quot;&gt;Main idea of Diffusion Model&lt;/h2&gt;

&lt;p&gt;Diffusion models works by &lt;strong&gt;destroying training data&lt;/strong&gt; through the successive addition if Gaussian noise, and then &lt;strong&gt;learning to recover&lt;/strong&gt; the data by reversing this noising process. After training, we can use the Diffusion Model to generate data by simply &lt;strong&gt;passing randomly sampled noise through the learned denoising process&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;forward-process-or-diffusion-process&quot;&gt;&lt;em&gt;Forward process&lt;/em&gt; (or &lt;em&gt;diffusion process&lt;/em&gt;)&lt;/h3&gt;

&lt;p&gt;Specifically, a Diffusion Model is a latent variable model which maps to the latent space using a fixed Markov chain. This chain gradually adds noise to the data in order to obtain the &lt;strong&gt;approximate posterior&lt;/strong&gt; \(q(X_{1:T}\vert X_0)\), where \(X_1,\ldots,X_T\) are the latent variables with the same dimensionality as \(X_0\). See figure below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.assemblyai.com/blog/content/images/size/w1000/2022/05/image.png&quot; alt=&quot;The Markov chain manifested for image data.&quot; width=&quot;600pt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A parameterization of the forward process (combing Markov assumption):&lt;/p&gt;

&lt;p&gt;\begin{equation}
\label{eq:forward-process}
q(X_{1:T} \vert X_0) := \prod^T_{t=1} q(X_t \vert X_{t-1}) := \prod^T_{t=1} \mathcal{N}(X_t;\sqrt{1-\beta_t}X_{t-1},\beta_t\mathbf{I})
\end{equation}&lt;/p&gt;

&lt;p&gt;where \(\beta_1,\dots,\beta_T\) is a variance schedule (either learned or fixed) which, if well-behaved, &lt;strong&gt;ensures that \(X_T\) is nearly an isotropic Gaussian for sufficiently large \(T\)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Let’s skip the proof for now.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;reverse-process-or-reverse-diffusion-process&quot;&gt;&lt;em&gt;Reverse process&lt;/em&gt; (or &lt;em&gt;reverse diffusion process&lt;/em&gt;)&lt;/h3&gt;

&lt;p&gt;Ultimately, the image is asymptotically transformed to pure Gaussian noise. The goal of training a diffusion model is to &lt;strong&gt;learn the reverse process&lt;/strong&gt;, i.e. training \(p_\theta (X_{t-1} \vert X_t)\). See figure below, by traversing backwards along this chain, we can generate new data.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.assemblyai.com/blog/content/images/size/w1000/2022/05/image-1.png&quot; alt=&quot;The reverse process of the Markov chain.&quot; width=&quot;600pt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Starting with the pure Gaussian noise \(p(X_T)=\mathcal{N}(X_T;\mathbf{0},\mathbf{I})\), the model learns the joint distribution \(p_\theta(X_0;T)\) as:&lt;/p&gt;

&lt;p&gt;\begin{equation}
p_\theta(X_0;T) := p(X_T) \prod^T_{t=1} p_\theta(X_{t-1}\vert X_t) := p(X_T) \prod^T_{t=1} \mathcal{N}(X_{t-1};\mu_\theta(x_t,t),\varSigma_\theta(X_t,t))
\end{equation}&lt;/p&gt;

&lt;p&gt;where the time-dependent parameters of the Gaussian transitions are learned.&lt;/p&gt;

&lt;h2 id=&quot;benefits-of-diffusion-models&quot;&gt;Benefits of Diffusion Models&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Diffusion Models currently produce State-of-the-Art image quality.&lt;/li&gt;
  &lt;li&gt;Not requiring adversarial training.&lt;/li&gt;
  &lt;li&gt;Scalability and parallelizability.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;training&quot;&gt;Training&lt;/h2&gt;

&lt;p&gt;A Diffusion Model is trained by &lt;strong&gt;finding the reverse Markov transitions that maximize the likelihood of the training data&lt;/strong&gt;. In practice, training equivalently consists of minimizing the variational upper bound on the negative log likelihood.&lt;/p&gt;

&lt;p&gt;\begin{equation}
\mathbb{E} [- \log p_\theta (X_0)] \leqslant \mathbb{E}_ {q} [-\log \frac{p_\theta (X_{0:T})}{q(X_{1:T} \vert X_0)}] =: L_{vlb}
\end{equation}&lt;/p&gt;

&lt;p&gt;Variational lower bound \(L_{vlb}\) is technically an upper bound (the negative of the ELBO) which we are trying to minimize. We will try to rewrite the \(L_{vlb}\) in terms of Kullback-Leibler (KL) Divergences because the transition distributions in the Markov chain are Gaussians, and &lt;strong&gt;the KL divergence between Gaussians has a closed form&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;\begin{equation}
D_{KL}(P\parallel Q) = \int_{-\infty}^{\infty} p(x)\log(\frac{p(x)}{q(x)}) dx
\end{equation}&lt;/p&gt;

&lt;p&gt;Casting \(L_{vlb}\) in terms of KL Divergences&lt;/p&gt;

&lt;p&gt;\begin{equation}
L_{vlb} := L_0 + L_1 + \ldots + L_{T-1} + L_T
\end{equation}&lt;/p&gt;

&lt;p&gt;where&lt;/p&gt;

&lt;p&gt;\begin{equation}
L_0 := -\log p_\theta(X_0 \vert X_1)
\end{equation}&lt;/p&gt;

&lt;p&gt;\begin{equation}
L_{t-1} := D_{KL}(q(X_{t-1} \vert X_t,X_0)\parallel p_\theta(X_{t-1} \vert X_t))
\end{equation}&lt;/p&gt;

&lt;p&gt;\begin{equation}
L_T := D_{KL}(q(X_T \vert X_0)\parallel p(X_T))
\end{equation}&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Let’s skip the proof for now.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Conditioning the forward process posterior on \(X_0\) in \(L_{t-1}\) results in a tractable form that leads to &lt;strong&gt;all KL divergences being comparisons between Gaussians&lt;/strong&gt;. This means that the divergences can be exactly calculated with closed-form expressions rather than with Monte Carlo estimates.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Diffusion Models are &lt;strong&gt;highly flexible&lt;/strong&gt; and allow for any architecture whose input and output dimensionality are the same to be used. Many implementations use &lt;strong&gt;U-Net-like&lt;/strong&gt; architectures.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;training objective&lt;/strong&gt; is to maximize the likelihood of t he training data. This is manifested as tuning the model parameters to &lt;strong&gt;minimize the variational upper bound of the negative log likelihood of the data&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Almost all terms in the objective function can be cast as &lt;strong&gt;KL Divergences&lt;/strong&gt; as a result of the Markov assumption. This values &lt;strong&gt;become tenable to calculated&lt;/strong&gt; given that we are using Gaussians, therefore omitting the need to perform MonteCarlo approximation.&lt;/li&gt;
  &lt;li&gt;A discrete decoder is used to obatin log likelihoods across pixel values as the last step in the reverse diffusion process.&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="generative-model" /><category term="deep-learning" /><category term="diffusion-model" /><summary type="html">TOC</summary></entry><entry><title type="html">Score based methods</title><link href="http://localhost:4000/blog/2022/Score-based-methods/" rel="alternate" type="text/html" title="Score based methods" /><published>2022-12-13T08:59:00-07:00</published><updated>2022-12-13T08:59:00-07:00</updated><id>http://localhost:4000/blog/2022/Score-based-methods</id><content type="html" xml:base="http://localhost:4000/blog/2022/Score-based-methods/">&lt;p&gt;&lt;em&gt;TOC&lt;/em&gt;&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-score-based-generative-modeling&quot; id=&quot;markdown-toc-1-score-based-generative-modeling&quot;&gt;1. Score-based generative modeling&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#score-matching-for-score-estimation&quot; id=&quot;markdown-toc-score-matching-for-score-estimation&quot;&gt;score matching for score estimation&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#11-denoising-score-matching&quot; id=&quot;markdown-toc-11-denoising-score-matching&quot;&gt;1.1. Denoising score matching&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#12-sliced-score-matching&quot; id=&quot;markdown-toc-12-sliced-score-matching&quot;&gt;1.2. Sliced score matching&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-sampling-with-langevin-dynamics&quot; id=&quot;markdown-toc-2-sampling-with-langevin-dynamics&quot;&gt;2. Sampling with Langevin Dynamics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-challenges&quot; id=&quot;markdown-toc-3-challenges&quot;&gt;3. Challenges&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-contributions-of-ncsn&quot; id=&quot;markdown-toc-4-contributions-of-ncsn&quot;&gt;4. Contributions of NCSN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Reference:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Official links:&lt;/p&gt;

&lt;p&gt;Noise Conditional Score Networks (NCSN) (NeurIPS 2019)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Paper: &lt;a href=&quot;https://arxiv.org/abs/1907.05600&quot;&gt;Generative Modeling by Estimating Gradients of the Data Distribution&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Blog: &lt;a href=&quot;https://yang-song.net/blog/&quot;&gt;https://yang-song.net/blog/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Github: &lt;a href=&quot;https://github.com/ermongroup/ncsn&quot;&gt;https://github.com/ermongroup/ncsn&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1-score-based-generative-modeling&quot;&gt;1. Score-based generative modeling&lt;/h2&gt;

&lt;p&gt;Given a probability density function (PDF) \(p(x)\), the ‘score’ is defined as \(\triangledown_x \log p(x)\), or the gradient of the log-likelihood of the object \(x\) w.r.t the input dimensions \(x\), notably not w.r.t the model parameters \(\theta\). We will assume that PDFs are continuous random variables. The score is a vector field of the gradient at any point \(x\). This gradient of \(\log p(x)\) tells us the directions in which to move if we want to increase the likelihood as much as possible.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;score-based network&lt;/strong&gt; \(s_\theta: \mathbb{R}^D \rightarrow \mathbb{R}^D\) is a neural network parameterized by \(\theta\), which will be trained to approximate the score of \(p_ {data}(x)\) ( \(\triangledown_x\log p(x)\) ). The framework of score-based generative modeling has two ingredients: &lt;em&gt;score matching&lt;/em&gt; and &lt;em&gt;Langevin dynamics&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;score-matching-for-score-estimation&quot;&gt;score matching for score estimation&lt;/h3&gt;

&lt;p&gt;Using score matching, we can directly train a score network \(s_\theta(x)\) to estimate \(\triangledown_x \log p(x)\) without training a model to estimate \(p_ {data}(x)\) first.&lt;/p&gt;

&lt;p&gt;The objective minimizes \(\frac{1}{2} \mathbb{E}_ {p_ {data}(x)}[\parallel s_\theta(x)-\triangledown_x \log p_ {data}(x)\parallel_2^2]\), which can be shown equivalent to the following up to a constant&lt;/p&gt;

&lt;p&gt;\begin{equation}
\mathbb{E}_ {p_ {data}(x)}[\text{tr}(\triangledown_xs_\theta(x))+\frac{1}{2}\parallel s_\theta(x)\parallel _2^2]
\end{equation}&lt;/p&gt;

&lt;p&gt;where \(\triangledown_xs_\theta(x)\) is the Jacobian (first-order partial derivatives) of \(s_\theta(x)\). Note that the trace of a square matrix \(A\), denoted \(\text{tr}(A)\), is defined to be the sum of elements on the main diagonal (from the upper left to the lower right) of \(A\).&lt;/p&gt;

&lt;p&gt;In practice, the expectation over \(p_ {data}(x)\) can be quickly estimated using data samples. However, score matching is not scalable to deep networks and high dimensional data due to the computation of \(\text{tr}(\triangledown_xs_\theta(x))\). Below are the two popular methods for large scale score matching.&lt;/p&gt;

&lt;h4 id=&quot;11-denoising-score-matching&quot;&gt;1.1. Denoising score matching&lt;/h4&gt;

&lt;p&gt;A variant of score matching that completely circumvents \(\text{tr}(\triangledown_xs_\theta(x))\). It first perturbs the data point \(x\) with a pre-specified noise distribution \(q_\sigma(\tilde{x}\vert x)\) and then employs score matching to estimate the score of the perturbed data distribution \(q_\sigma(\tilde{x}) \triangleq \int q_\sigma(\tilde{x}\vert x)p_ {data}(x)dx\). The objective was proved equivalent to the following:&lt;/p&gt;

&lt;p&gt;\begin{equation}
\frac{1}{2} \mathbb{E}_ {q_\sigma(\tilde{x}\vert x)p_ {data}(x)}[\parallel s_\theta(\tilde{x})-\triangledown_ {\tilde{x}}\log q_\sigma(\tilde{x}\vert x)\parallel _2^2]
\end{equation}&lt;/p&gt;

&lt;h4 id=&quot;12-sliced-score-matching&quot;&gt;1.2. Sliced score matching&lt;/h4&gt;

&lt;p&gt;Sliced score matching uses random projections to approximate \(\text{tr}(\triangledown_xs_\theta(x))\) in score matching. The objective is&lt;/p&gt;

&lt;p&gt;\begin{equation}
\mathbb{E}_ {p_v}\mathbb{E}_ {p_ {data}}[v^T \triangledown_x s_\theta(x)v + \frac{1}{2} \parallel s_\theta(x)\parallel _2^2]
\end{equation}&lt;/p&gt;

&lt;p&gt;where \(p_v\) is a simple distribution of random vectors, e.g., the multivariate standard normal. The term \(v^T \triangledown_x s_\theta(x)v\) can be efficiently computed by forward mode auto-differentiation. Unlike denoising score matching which estimates the scores of &lt;em&gt;perturbed&lt;/em&gt; data, sliced score matching provides score estimation for the original &lt;em&gt;unperturbed&lt;/em&gt; data distribution, but requires around four times more computation due to the forward mode auto-differentiation.&lt;/p&gt;

&lt;h2 id=&quot;2-sampling-with-langevin-dynamics&quot;&gt;2. Sampling with Langevin Dynamics&lt;/h2&gt;

&lt;p&gt;Langevin Monte Carlo is a Markov Chain Monte Carlo (MCMC) method for obtaining random samples from probability distributions for which direct sampling is difficult. The goal is to “follow the gradient but add a bit of noise” so as to not get stuck at the local optima regions and thus we are able to explore the distribution and sample from it. It approximately works by gradually moving a random initial sample to high density regions along the (estimated) vector field of scores.&lt;/p&gt;

&lt;p&gt;Langevin dynamics can produce samples from a probability density \(p(x)\) using only the score function \(\triangledown_x \log p_ {data}(x)\). Given a fixed step size \(\epsilon &amp;gt; 0\), and an initial value \(\tilde{x}_0 \sim \pi(x)\) with \(\pi\) being a prior distribution, the Langevin method recursively computes the following&lt;/p&gt;

&lt;p&gt;\begin{equation}
\tilde{x}_ t = \tilde{x}_ {t-1} + \frac{\epsilon}{2} \triangledown_x \log p(\tilde{x}_ {t-1}) + \sqrt{\epsilon} z_t
\end{equation}&lt;/p&gt;

&lt;p&gt;where \(z_t \sim \mathcal{N}(0,I)\). The distribution of \(\tilde{x}_T\) equals \(p(x)\) when \(\epsilon \rightarrow 0\) and \(T \rightarrow \infty\), in which case \(\tilde{x}_T\) becomes an exact sample from \(p(x)\) under some regularity conditions. We usually assume the error is negligible when \(\epsilon\) is small and \(T\) is large.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Note that sampling from this equation only requires the score function \(\triangledown_x \log p_ {data}(x)\). Therefore, in order to obtain samples from \(p_ {data}(x)\), we can first train our score network such that \(s_\theta(x) \approx \triangledown_x \log p_ {data}(x)\) and then approximately obtain samples with Langevin dynamics using \(s_\theta(x)\). This is the key idea of the &lt;em&gt;score-based generative modeling&lt;/em&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;3-challenges&quot;&gt;3. Challenges&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;If the &lt;strong&gt;data distribution is&lt;/strong&gt; supported on a &lt;strong&gt;low dimensional manifold&lt;/strong&gt; - it is often assumed for many real world datasets - the &lt;strong&gt;score will be undefined in the ambient space&lt;/strong&gt;, and &lt;strong&gt;score matching will fail to provide a consistent score estimator&lt;/strong&gt;. The score matching objective provides a consistent score estimator only when the support of the data distribution is the whole space.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The scarcity of training data in &lt;strong&gt;low data density regions&lt;/strong&gt;, e.g., far from the manifold, &lt;strong&gt;hinders the accuracy of score estimation&lt;/strong&gt; and &lt;strong&gt;slows down the mixing of Langevin dynamics sampling&lt;/strong&gt;. Since Langevin dynamics will often be initialized in low-density regions of the data distribution, inaccurate score estimation in these regions will negatively affect the sampling process.&lt;/p&gt;

    &lt;p align=&quot;center&quot; id=&quot;negative-effect-low-density&quot;&gt;
 &lt;img src=&quot;../../../assets/img/blog/NCSN-negative_effect_of_low_density.png&quot; alt=&quot;Inaccurate score estimation with score matching&quot; width=&quot;300pt&quot; /&gt;

 &lt;img src=&quot;../../../assets/img/blog/NCSN-low_density_pitfalls.jpg&quot; alt=&quot;Inaccurate score estimation with score matching&quot; width=&quot;600pt&quot; /&gt;
 &lt;/p&gt;

    &lt;p&gt;As the &lt;a href=&quot;#negative-effect-low-density&quot;&gt;figure&lt;/a&gt; demonstrates, score estimation is only reliable in the immediate vicinity of the models of \(p_ {data}\), where the data density is high.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Mixing can be difficult because of the need of traversing low density regions to transition between models of the distribution. In other words, when two models of the data distribution are separated by low density regions, Langevin dynamics will not be able to correctly recover the relative weights of these two modes in reasonable time, and therefore might not converge to the true distribution.&lt;/p&gt;

    &lt;p align=&quot;center&quot;&gt;
   &lt;img src=&quot;../../../assets/img/blog/NCSN-slow_mixing_of_Langevin_dynamics.png&quot; alt=&quot;Slow mixing of Langevin dynamics&quot; width=&quot;600pt&quot; /&gt;
&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;4-contributions-of-ncsn&quot;&gt;4. Contributions of NCSN&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Propose to &lt;strong&gt;perturb the data with random Gaussian noise of various magnitudes&lt;/strong&gt;.&lt;/p&gt;

    &lt;p&gt;Adding random noise ensues the resulting distribution does not collapse to a low dimensional manifold. Large noise levels will produce samples in low density regions of the original (unperturbed) data distribution, thus improving score estimation.&lt;/p&gt;

    &lt;p align=&quot;center&quot; id=&quot;perturb_data_with_noise&quot;&gt;
   &lt;img src=&quot;../../../assets/img/blog/NCSN-perturb_data_with_noise.png&quot; alt=&quot;Perturb data with random Gaussian noise&quot; width=&quot;400pt&quot; /&gt;
&lt;/p&gt;

    &lt;p&gt;As the &lt;a href=&quot;#perturb_data_with_noise&quot;&gt;figure&lt;/a&gt; (left) shows, when trained on the original CIFAR-10 images, the sliced score matching loss first decreases and then fluctuates irregularly. In contrast, if wee perturb the data with a small Gaussian noise (such that the perturbed data distribution has full support over \(\mathbb{R}^D\)), the loss curve will converge (right panel). Note that the Gaussian noise \(\mathcal{N}(0, 0.0001)\) we impose is very small for images with pixel values in the range \([0,1]\), and is almost indistinguishable to human eyes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Train a single score network conditioned on the noise level and estimate the scores at all noise magnitudes.&lt;/p&gt;

    &lt;p&gt;Let \(\{ \sigma_i \}_ {i=1}^L\) be a positive geometric sequence that satisfies \(\frac{\sigma_1}{\sigma_2} = \ldots = \frac{\sigma_ {L-1}}{\sigma_L} &amp;gt; 1\).&lt;/p&gt;

    &lt;p&gt;Let \(q_\sigma(x) \triangleq \int p_ {data}(t) \mathcal{N}(x\vert t,\sigma^2I)dt\) denote the perturbed data distribution.&lt;/p&gt;

    &lt;p&gt;We choose the noise levels \(\{\sigma_i\}_ {i=1}^L\) such that \(\sigma_1\) is large enough to mitigate the difficulties discussed before, and \(\sigma_L\) is small enough to minimize the effect on data. The conditional score network \(s_\theta(x,\sigma)\) is trained to jointly estimate the scores of all perturbed data distributions, i.e., \(\forall_\sigma \in \{\sigma_i\}_ {i=1}^L : s_\theta(x,\sigma) \approx \triangledown_x \log q_\sigma (x)\). Note that \(s_\theta(x,\sigma) \in \mathbb{R}^D\) when \(x \in \mathbb{R}^D\).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Propose &lt;strong&gt;an annealed version of Langevin dynamics&lt;/strong&gt;, where we initially use scores corresponding to the highest noise level, and gradually anneal down the noise level until it is small enough to be indistinguishable from the original data distribution.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="generative-model" /><category term="deep-learning" /><summary type="html">TOC</summary></entry><entry><title type="html">a post with redirect</title><link href="http://localhost:4000/blog/2022/redirect/" rel="alternate" type="text/html" title="a post with redirect" /><published>2022-02-01T10:39:00-07:00</published><updated>2022-02-01T10:39:00-07:00</updated><id>http://localhost:4000/blog/2022/redirect</id><content type="html" xml:base="http://localhost:4000/blog/2022/redirect/"></content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">a distill-style blog post</title><link href="http://localhost:4000/blog/2021/distill/" rel="alternate" type="text/html" title="a distill-style blog post" /><published>2021-05-22T00:00:00-06:00</published><updated>2021-05-22T00:00:00-06:00</updated><id>http://localhost:4000/blog/2021/distill</id><content type="html" xml:base="http://localhost:4000/blog/2021/distill/">&lt;h2 id=&quot;equations&quot;&gt;Equations&lt;/h2&gt;

&lt;p&gt;This theme supports rendering beautiful math in inline and display modes using &lt;a href=&quot;https://www.mathjax.org/&quot;&gt;MathJax 3&lt;/a&gt; engine.
You just need to surround your math expression with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$&lt;/code&gt;, like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$ E = mc^2 $$&lt;/code&gt;.
If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).&lt;/p&gt;

&lt;p&gt;To use display mode, again surround your expression with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$&lt;/code&gt; and place it as a separate paragraph.
Here is an example:&lt;/p&gt;

\[\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)\]

&lt;p&gt;Note that MathJax 3 is &lt;a href=&quot;https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html&quot;&gt;a major re-write of MathJax&lt;/a&gt; that brought a significant improvement to the loading and rendering speed, which is now &lt;a href=&quot;http://www.intmath.com/cg5/katex-mathjax-comparison.php&quot;&gt;on par with KaTeX&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;citations&quot;&gt;Citations&lt;/h2&gt;

&lt;p&gt;Citations are then used in the article body with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;d-cite&amp;gt;&lt;/code&gt; tag.
The key attribute is a reference to the id provided in the bibliography.
The key attribute can take multiple ids, separated by commas.&lt;/p&gt;

&lt;p&gt;The citation is presented inline like this: &lt;d-cite key=&quot;gregor2015draw&quot;&gt;&lt;/d-cite&gt; (a number that displays more information on hover).
If you have an appendix, a bibliography is automatically created and populated in it.&lt;/p&gt;

&lt;p&gt;Distill chose a numerical inline citation style to improve readability of citation dense articles and because many of the benefits of longer citations are obviated by displaying more information on hover.
However, we consider it good style to mention author last names if you discuss something at length and it fits into the flow well — the authors are human and it’s nice for them to have the community associate them with their work.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h2&gt;

&lt;p&gt;Just wrap the text you would like to show up in a footnote in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;d-footnote&amp;gt;&lt;/code&gt; tag.
The number of the footnote will be automatically generated.&lt;d-footnote&gt;This will become a hoverable footnote.&lt;/d-footnote&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;code-blocks&quot;&gt;Code Blocks&lt;/h2&gt;

&lt;p&gt;Syntax highlighting is provided within &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;d-code&amp;gt;&lt;/code&gt; tags.
An example of inline code snippets: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;d-code language=&quot;html&quot;&amp;gt;let x = 10;&amp;lt;/d-code&amp;gt;&lt;/code&gt;.
For larger blocks of code, add a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;block&lt;/code&gt; attribute:&lt;/p&gt;

&lt;d-code block=&quot;&quot; language=&quot;javascript&quot;&gt;
  var x = 25;
  function(x) {
    return x * x;
  }
&lt;/d-code&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;d-code&amp;gt;&lt;/code&gt; blocks do not look good in the dark mode.
You can always use the default code-highlight using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;highlight&lt;/code&gt; liquid tag:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;layouts&quot;&gt;Layouts&lt;/h2&gt;

&lt;p&gt;The main text column is referred to as the body.
It is the assumed layout of any direct descendants of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d-article&lt;/code&gt; element.&lt;/p&gt;

&lt;div class=&quot;fake-img l-body&quot;&gt;
  &lt;p&gt;.l-body&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;For images you want to display a little larger, try &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.l-page&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;fake-img l-page&quot;&gt;
  &lt;p&gt;.l-page&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;All of these have an outset variant if you want to poke out from the body text a little bit.
For instance:&lt;/p&gt;

&lt;div class=&quot;fake-img l-body-outset&quot;&gt;
  &lt;p&gt;.l-body-outset&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;fake-img l-page-outset&quot;&gt;
  &lt;p&gt;.l-page-outset&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Occasionally you’ll want to use the full browser width.
For this, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.l-screen&lt;/code&gt;.
You can also inset the element a little from the edge of the browser by using the inset variant.&lt;/p&gt;

&lt;div class=&quot;fake-img l-screen&quot;&gt;
  &lt;p&gt;.l-screen&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;fake-img l-screen-inset&quot;&gt;
  &lt;p&gt;.l-screen-inset&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The final layout is for marginalia, asides, and footnotes.
It does not interrupt the normal flow of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.l-body&lt;/code&gt; sized text except on mobile screen sizes.&lt;/p&gt;

&lt;div class=&quot;fake-img l-gutter&quot;&gt;
  &lt;p&gt;.l-gutter&lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;other-typography&quot;&gt;Other Typography?&lt;/h2&gt;

&lt;p&gt;Emphasis, aka italics, with &lt;em&gt;asterisks&lt;/em&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*asterisks*&lt;/code&gt;) or &lt;em&gt;underscores&lt;/em&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_underscores_&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Strong emphasis, aka bold, with &lt;strong&gt;asterisks&lt;/strong&gt; or &lt;strong&gt;underscores&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Combined emphasis with &lt;strong&gt;asterisks and &lt;em&gt;underscores&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Strikethrough uses two tildes. &lt;del&gt;Scratch this.&lt;/del&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;First ordered list item&lt;/li&gt;
  &lt;li&gt;Another item
⋅⋅* Unordered sub-list.&lt;/li&gt;
  &lt;li&gt;Actual numbers don’t matter, just that it’s a number
⋅⋅1. Ordered sub-list&lt;/li&gt;
  &lt;li&gt;And another item.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).&lt;/p&gt;

&lt;p&gt;⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅
⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅
⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Unordered list can use asterisks&lt;/li&gt;
  &lt;li&gt;Or minuses&lt;/li&gt;
  &lt;li&gt;Or pluses&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.google.com&quot;&gt;I’m an inline-style link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.google.com&quot; title=&quot;Google&apos;s Homepage&quot;&gt;I’m an inline-style link with title&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org&quot;&gt;I’m a reference-style link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../blob/master/LICENSE&quot;&gt;I’m a relative reference to a repository file&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://slashdot.org&quot;&gt;You can use numbers for reference-style link definitions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or leave it empty and use the &lt;a href=&quot;http://www.reddit.com&quot;&gt;link text itself&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;URLs and URLs in angle brackets will automatically get turned into links.
http://www.example.com or &lt;a href=&quot;http://www.example.com&quot;&gt;http://www.example.com&lt;/a&gt; and sometimes
example.com (but not on Github, for example).&lt;/p&gt;

&lt;p&gt;Some text to show that the reference links can follow later.&lt;/p&gt;

&lt;p&gt;Here’s our logo (hover to see the title text):&lt;/p&gt;

&lt;p&gt;Inline-style:
&lt;img src=&quot;https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png&quot; alt=&quot;alt text&quot; title=&quot;Logo Title Text 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Reference-style:
&lt;img src=&quot;https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png&quot; alt=&quot;alt text&quot; title=&quot;Logo Title Text 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Inline &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;code&lt;/code&gt; has &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;back-ticks around&lt;/code&gt; it.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JavaScript syntax highlighting&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Python syntax highlighting&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;No language indicated, so no syntax highlighting.
But let&apos;s throw in a &amp;lt;b&amp;gt;tag&amp;lt;/b&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Colons can be used to align columns.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Tables&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Are&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Cool&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;col 3 is&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;right-aligned&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$1600&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;col 2 is&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;centered&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;zebra stripes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;are neat&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;There must be at least 3 dashes separating each header cell.
The outer pipes (|) are optional, and you don’t need to make the
raw Markdown line up prettily. You can also use inline Markdown.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Markdown&lt;/th&gt;
      &lt;th&gt;Less&lt;/th&gt;
      &lt;th&gt;Pretty&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;Still&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;renders&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;nicely&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;Blockquotes are very handy in email to emulate reply text.
This line is part of the same quote.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Quote break.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can &lt;em&gt;put&lt;/em&gt; &lt;strong&gt;Markdown&lt;/strong&gt; into a blockquote.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here’s a line for us to start with.&lt;/p&gt;

&lt;p&gt;This line is separated from the one above by two newlines, so it will be a &lt;em&gt;separate paragraph&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This line is also a separate paragraph, but…
This line is only separated by a single newline, so it’s a separate line in the &lt;em&gt;same paragraph&lt;/em&gt;.&lt;/p&gt;</content><author><name>Albert Einstein</name></author><summary type="html">Equations</summary></entry><entry><title type="html">a post with github metadata</title><link href="http://localhost:4000/blog/2020/github-metadata/" rel="alternate" type="text/html" title="a post with github metadata" /><published>2020-09-28T15:01:00-06:00</published><updated>2020-09-28T15:01:00-06:00</updated><id>http://localhost:4000/blog/2020/github-metadata</id><content type="html" xml:base="http://localhost:4000/blog/2020/github-metadata/">&lt;p&gt;A sample blog page that demonstrates the accessing of github meta data.&lt;/p&gt;

&lt;h2 id=&quot;what-does-github-metadata-do&quot;&gt;What does Github-MetaData do?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Propagates the site.github namespace with repository metadata&lt;/li&gt;
  &lt;li&gt;Setting site variables :
    &lt;ul&gt;
      &lt;li&gt;site.title&lt;/li&gt;
      &lt;li&gt;site.description&lt;/li&gt;
      &lt;li&gt;site.url&lt;/li&gt;
      &lt;li&gt;site.baseurl&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Accessing the metadata - duh.&lt;/li&gt;
  &lt;li&gt;Generating edittable links.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;additional-reading&quot;&gt;Additional Reading&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;If you’re recieving incorrect/missing data, you may need to perform a Github API&lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/authentication.md&quot;&gt; authentication&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Go through this &lt;a href=&quot;https://jekyll.github.io/github-metadata/&quot;&gt;README&lt;/a&gt; for more details on the topic.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot;&gt;This page&lt;/a&gt; highlights all the feilds you can access with github-metadata.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;example-metadata&quot;&gt;Example MetaData&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Host Name :&lt;/li&gt;
  &lt;li&gt;URL :&lt;/li&gt;
  &lt;li&gt;BaseURL :&lt;/li&gt;
  &lt;li&gt;Archived :&lt;/li&gt;
  &lt;li&gt;Contributors :&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><summary type="html">A sample blog page that demonstrates the accessing of github meta data. What does Github-MetaData do? Propagates the site.github namespace with repository metadata Setting site variables : site.title site.description site.url site.baseurl Accessing the metadata - duh. Generating edittable links. Additional Reading If you’re recieving incorrect/missing data, you may need to perform a Github API authentication. Go through this README for more details on the topic. This page highlights all the feilds you can access with github-metadata. Example MetaData Host Name : URL : BaseURL : Archived : Contributors :</summary></entry><entry><title type="html">a post with math</title><link href="http://localhost:4000/blog/2015/math/" rel="alternate" type="text/html" title="a post with math" /><published>2015-10-20T09:12:00-06:00</published><updated>2015-10-20T09:12:00-06:00</updated><id>http://localhost:4000/blog/2015/math</id><content type="html" xml:base="http://localhost:4000/blog/2015/math/">&lt;p&gt;This theme supports rendering beautiful math in inline and display modes using &lt;a href=&quot;https://www.mathjax.org/&quot;&gt;MathJax 3&lt;/a&gt; engine. You just need to surround your math expression with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$&lt;/code&gt;, like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$ E = mc^2 $$&lt;/code&gt;. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).&lt;/p&gt;

&lt;p&gt;To use display mode, again surround your expression with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$&lt;/code&gt; and place it as a separate paragraph. Here is an example:&lt;/p&gt;

\[\sum_{k=1}^\infty |\langle x, e_k \rangle|^2 \leq \|x\|^2\]

&lt;p&gt;You can also use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\begin{equation}...\end{equation}&lt;/code&gt; instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$&lt;/code&gt; for display mode math.
MathJax will automatically number equations:&lt;/p&gt;

&lt;p&gt;\begin{equation}
\label{eq:cauchy-schwarz}
\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)
\end{equation}&lt;/p&gt;

&lt;p&gt;and by adding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\label{...}&lt;/code&gt; inside the equation environment, we can now refer to the equation using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\eqref&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Note that MathJax 3 is &lt;a href=&quot;https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html&quot;&gt;a major re-write of MathJax&lt;/a&gt; that brought a significant improvement to the loading and rendering speed, which is now &lt;a href=&quot;http://www.intmath.com/cg5/katex-mathjax-comparison.php&quot;&gt;on par with KaTeX&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="sample-posts" /><category term="formatting" /><category term="math" /><summary type="html">This theme supports rendering beautiful math in inline and display modes using MathJax 3 engine. You just need to surround your math expression with $$, like $$ E = mc^2 $$. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</summary></entry><entry><title type="html">a post with code</title><link href="http://localhost:4000/blog/2015/code/" rel="alternate" type="text/html" title="a post with code" /><published>2015-07-15T09:09:00-06:00</published><updated>2015-07-15T09:09:00-06:00</updated><id>http://localhost:4000/blog/2015/code</id><content type="html" xml:base="http://localhost:4000/blog/2015/code/">&lt;p&gt;This theme implements a built-in Jekyll feature, the use of Rouge, for syntax highlighting.
It supports more than 100 languages.
This example is in C++.
All you have to do is wrap your code in a liquid tag:&lt;/p&gt;

&lt;p&gt;{% highlight c++ linenos %}  &lt;br /&gt; code code code &lt;br /&gt; {% endhighlight %}&lt;/p&gt;

&lt;p&gt;The keyword &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;linenos&lt;/code&gt; triggers display of line numbers.
Produces something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;input a string: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;getline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;charArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;charArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;charArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><category term="sample-posts" /><category term="formatting" /><category term="code" /><summary type="html">This theme implements a built-in Jekyll feature, the use of Rouge, for syntax highlighting. It supports more than 100 languages. This example is in C++. All you have to do is wrap your code in a liquid tag:</summary></entry><entry><title type="html">a post with images</title><link href="http://localhost:4000/blog/2015/images/" rel="alternate" type="text/html" title="a post with images" /><published>2015-05-15T15:01:00-06:00</published><updated>2015-05-15T15:01:00-06:00</updated><id>http://localhost:4000/blog/2015/images</id><content type="html" xml:base="http://localhost:4000/blog/2015/images/">&lt;p&gt;This is an example post with image galleries.&lt;/p&gt;

&lt;div class=&quot;row mt-3&quot;&gt;
    &lt;div class=&quot;col-sm mt-3 mt-md-0&quot;&gt;
        &lt;figure&gt;

  &lt;picture&gt;
    
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 480px)&quot; srcset=&quot;/assets/img/9-480.webp&quot; /&gt;
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 800px)&quot; srcset=&quot;/assets/img/9-800.webp&quot; /&gt;
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 1400px)&quot; srcset=&quot;/assets/img/9-1400.webp&quot; /&gt;
    

    &lt;!-- Fallback to the original file --&gt;
    &lt;img src=&quot;/assets/img/9.jpg&quot; class=&quot;img-fluid rounded z-depth-1&quot; width=&quot;auto&quot; height=&quot;auto&quot; onerror=&quot;this.onerror=null; $(&apos;.responsive-img-srcset&apos;).remove();&quot; /&gt;

  &lt;/picture&gt;

&lt;/figure&gt;

    &lt;/div&gt;
    &lt;div class=&quot;col-sm mt-3 mt-md-0&quot;&gt;
        &lt;figure&gt;

  &lt;picture&gt;
    
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 480px)&quot; srcset=&quot;/assets/img/7-480.webp&quot; /&gt;
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 800px)&quot; srcset=&quot;/assets/img/7-800.webp&quot; /&gt;
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 1400px)&quot; srcset=&quot;/assets/img/7-1400.webp&quot; /&gt;
    

    &lt;!-- Fallback to the original file --&gt;
    &lt;img src=&quot;/assets/img/7.jpg&quot; class=&quot;img-fluid rounded z-depth-1&quot; width=&quot;auto&quot; height=&quot;auto&quot; onerror=&quot;this.onerror=null; $(&apos;.responsive-img-srcset&apos;).remove();&quot; /&gt;

  &lt;/picture&gt;

&lt;/figure&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;caption&quot;&gt;
    A simple, elegant caption looks good between image rows, after each row, or doesn&apos;t have to be there at all.
&lt;/div&gt;

&lt;p&gt;Images can be made zoomable.
Simply add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data-zoomable&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags that you want to make zoomable.&lt;/p&gt;

&lt;div class=&quot;row mt-3&quot;&gt;
    &lt;div class=&quot;col-sm mt-3 mt-md-0&quot;&gt;
        &lt;figure&gt;

  &lt;picture&gt;
    
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 480px)&quot; srcset=&quot;/assets/img/8-480.webp&quot; /&gt;
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 800px)&quot; srcset=&quot;/assets/img/8-800.webp&quot; /&gt;
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 1400px)&quot; srcset=&quot;/assets/img/8-1400.webp&quot; /&gt;
    

    &lt;!-- Fallback to the original file --&gt;
    &lt;img src=&quot;/assets/img/8.jpg&quot; class=&quot;img-fluid rounded z-depth-1&quot; width=&quot;auto&quot; height=&quot;auto&quot; data-zoomable=&quot;&quot; onerror=&quot;this.onerror=null; $(&apos;.responsive-img-srcset&apos;).remove();&quot; /&gt;

  &lt;/picture&gt;

&lt;/figure&gt;

    &lt;/div&gt;
    &lt;div class=&quot;col-sm mt-3 mt-md-0&quot;&gt;
        &lt;figure&gt;

  &lt;picture&gt;
    
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 480px)&quot; srcset=&quot;/assets/img/10-480.webp&quot; /&gt;
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 800px)&quot; srcset=&quot;/assets/img/10-800.webp&quot; /&gt;
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 1400px)&quot; srcset=&quot;/assets/img/10-1400.webp&quot; /&gt;
    

    &lt;!-- Fallback to the original file --&gt;
    &lt;img src=&quot;/assets/img/10.jpg&quot; class=&quot;img-fluid rounded z-depth-1&quot; width=&quot;auto&quot; height=&quot;auto&quot; data-zoomable=&quot;&quot; onerror=&quot;this.onerror=null; $(&apos;.responsive-img-srcset&apos;).remove();&quot; /&gt;

  &lt;/picture&gt;

&lt;/figure&gt;

    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The rest of the images in this post are all zoomable, arranged into different mini-galleries.&lt;/p&gt;

&lt;div class=&quot;row mt-3&quot;&gt;
    &lt;div class=&quot;col-sm mt-3 mt-md-0&quot;&gt;
        &lt;figure&gt;

  &lt;picture&gt;
    
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 480px)&quot; srcset=&quot;/assets/img/11-480.webp&quot; /&gt;
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 800px)&quot; srcset=&quot;/assets/img/11-800.webp&quot; /&gt;
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 1400px)&quot; srcset=&quot;/assets/img/11-1400.webp&quot; /&gt;
    

    &lt;!-- Fallback to the original file --&gt;
    &lt;img src=&quot;/assets/img/11.jpg&quot; class=&quot;img-fluid rounded z-depth-1&quot; width=&quot;auto&quot; height=&quot;auto&quot; data-zoomable=&quot;&quot; onerror=&quot;this.onerror=null; $(&apos;.responsive-img-srcset&apos;).remove();&quot; /&gt;

  &lt;/picture&gt;

&lt;/figure&gt;

    &lt;/div&gt;
    &lt;div class=&quot;col-sm mt-3 mt-md-0&quot;&gt;
        &lt;figure&gt;

  &lt;picture&gt;
    
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 480px)&quot; srcset=&quot;/assets/img/12-480.webp&quot; /&gt;
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 800px)&quot; srcset=&quot;/assets/img/12-800.webp&quot; /&gt;
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 1400px)&quot; srcset=&quot;/assets/img/12-1400.webp&quot; /&gt;
    

    &lt;!-- Fallback to the original file --&gt;
    &lt;img src=&quot;/assets/img/12.jpg&quot; class=&quot;img-fluid rounded z-depth-1&quot; width=&quot;auto&quot; height=&quot;auto&quot; data-zoomable=&quot;&quot; onerror=&quot;this.onerror=null; $(&apos;.responsive-img-srcset&apos;).remove();&quot; /&gt;

  &lt;/picture&gt;

&lt;/figure&gt;

    &lt;/div&gt;
    &lt;div class=&quot;col-sm mt-3 mt-md-0&quot;&gt;
        &lt;figure&gt;

  &lt;picture&gt;
    
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 480px)&quot; srcset=&quot;/assets/img/7-480.webp&quot; /&gt;
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 800px)&quot; srcset=&quot;/assets/img/7-800.webp&quot; /&gt;
    &lt;source class=&quot;responsive-img-srcset&quot; media=&quot;(max-width: 1400px)&quot; srcset=&quot;/assets/img/7-1400.webp&quot; /&gt;
    

    &lt;!-- Fallback to the original file --&gt;
    &lt;img src=&quot;/assets/img/7.jpg&quot; class=&quot;img-fluid rounded z-depth-1&quot; width=&quot;auto&quot; height=&quot;auto&quot; data-zoomable=&quot;&quot; onerror=&quot;this.onerror=null; $(&apos;.responsive-img-srcset&apos;).remove();&quot; /&gt;

  &lt;/picture&gt;

&lt;/figure&gt;

    &lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><category term="sample-posts" /><category term="formatting" /><category term="images" /><summary type="html">This is an example post with image galleries.</summary></entry><entry><title type="html">a post with formatting and links</title><link href="http://localhost:4000/blog/2015/formatting-and-links/" rel="alternate" type="text/html" title="a post with formatting and links" /><published>2015-03-15T10:40:16-06:00</published><updated>2015-03-15T10:40:16-06:00</updated><id>http://localhost:4000/blog/2015/formatting-and-links</id><content type="html" xml:base="http://localhost:4000/blog/2015/formatting-and-links/">&lt;p&gt;Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. &lt;a href=&quot;https://www.pinterest.com&quot;&gt;Pinterest&lt;/a&gt; DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade &lt;a href=&quot;https://en.wikipedia.org/wiki/Cold-pressed_juice&quot;&gt;cold-pressed&lt;/a&gt; meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.&lt;/p&gt;

&lt;h4 id=&quot;hipster-list&quot;&gt;Hipster list&lt;/h4&gt;
&lt;ul&gt;
    &lt;li&gt;brunch&lt;/li&gt;
    &lt;li&gt;fixie&lt;/li&gt;
    &lt;li&gt;raybans&lt;/li&gt;
    &lt;li&gt;messenger bag&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hoodie Thundercats retro, tote bag 8-bit Godard craft beer gastropub. Truffaut Tumblr taxidermy, raw denim Kickstarter sartorial dreamcatcher. Quinoa chambray slow-carb salvia readymade, bicycle rights 90’s yr typewriter selfies letterpress cardigan vegan.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Pug heirloom High Life vinyl swag, single-origin coffee four dollar toast taxidermy reprehenderit fap distillery master cleanse locavore. Est anim sapiente leggings Brooklyn ea. Thundercats locavore excepteur veniam eiusmod. Raw denim Truffaut Schlitz, migas sapiente Portland VHS twee Bushwick Marfa typewriter retro id keytar.&lt;/p&gt;

&lt;blockquote&gt;
    We do not grow absolutely, chronologically. We grow sometimes in one dimension, and not in another, unevenly. We grow partially. We are relative. We are mature in one realm, childish in another.
    —Anais Nin
&lt;/blockquote&gt;

&lt;p&gt;Fap aliqua qui, scenester pug Echo Park polaroid irony shabby chic ex cardigan church-key Odd Future accusamus. Blog stumptown sartorial squid, gastropub duis aesthetic Truffaut vero. Pinterest tilde twee, odio mumblecore jean shorts lumbersexual.&lt;/p&gt;</content><author><name></name></author><category term="sample-posts" /><category term="formatting" /><category term="links" /><summary type="html">Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. Pinterest DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade cold-pressed meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</summary></entry></feed>